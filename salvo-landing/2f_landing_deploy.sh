#!/bin/bash

# Script 2f: Deploy da Landing Page do Salv√¥ para VPS
# Autor: Rafael Ferreira
# Data: 2025-08-09
# Uso: Execute dentro da pasta salvo-landing
# ./2f_landing_deploy.sh [--update]

echo "üöÄ Deploy da Landing Page Salv√¥ para VPS..."

# Verificar se est√° na pasta correta
if [ ! -f "index.html" ] || [ ! -d "assets" ]; then
    echo "‚ùå Erro: Execute este script dentro da pasta salvo-landing"
    echo "üìÅ Estrutura esperada:"
    echo "   salvo-landing/"
    echo "   ‚îú‚îÄ‚îÄ index.html"
    echo "   ‚îú‚îÄ‚îÄ assets/"
    echo "   ‚îî‚îÄ‚îÄ ..."
    exit 1
fi

# Configura√ß√µes do servidor
VPS_HOST="212.85.1.55"
VPS_USER="salvo-vtec"
VPS_PASSWORD="Bj4hwtmpSXA0ELI32nsI"
VPS_DOMAIN="salvo.vancouvertec.com.br"
VPS_PATH="/home/salvo-vtec/htdocs/salvo.vancouvertec.com.br"

# Verificar se √© atualiza√ß√£o
UPDATE_MODE=false
if [ "$1" = "--update" ]; then
    UPDATE_MODE=true
    echo "üîÑ Modo atualiza√ß√£o ativado"
fi

# Verificar depend√™ncias
echo "üîç Verificando depend√™ncias..."

# Verificar sshpass
if ! command -v sshpass &> /dev/null; then
    echo "üì¶ Instalando sshpass..."
    sudo apt update
    sudo apt install -y sshpass
fi

# Verificar rsync
if ! command -v rsync &> /dev/null; then
    echo "üì¶ Instalando rsync..."
    sudo apt install -y rsync
fi

echo "‚úÖ Depend√™ncias verificadas!"

# Fun√ß√£o para executar comando no servidor
ssh_exec() {
    sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" "$1"
}

# Fun√ß√£o para fazer upload de arquivos
upload_files() {
    local source="$1"
    local destination="$2"

    sshpass -p "$VPS_PASSWORD" rsync -avz \
        --delete \
        -e "ssh -o StrictHostKeyChecking=no" \
        "$source" "$VPS_USER@$VPS_HOST:$destination"
}

# Pr√©-deploy: Valida√ß√µes
echo "üîç Executando valida√ß√µes pr√©-deploy..."

# Verificar arquivos essenciais
required_files=(
    "index.html"
    "assets/css/style.css"
    "assets/js/app.js"
    "assets/js/firebase.js"
    "assets/img/logo-salvo.svg"
)

for file in "${required_files[@]}"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå Arquivo obrigat√≥rio n√£o encontrado: $file"
        exit 1
    fi
done

echo "‚úÖ Arquivos essenciais verificados!"

# Verificar se o servidor est√° acess√≠vel
echo "üåê Testando conex√£o com o servidor..."
if ! sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 "$VPS_USER@$VPS_HOST" "echo 'Conex√£o OK'" > /dev/null 2>&1; then
    echo "‚ùå Erro: N√£o foi poss√≠vel conectar ao servidor"
    echo "üîß Verifique:"
    echo "   - Conex√£o com internet"
    echo "   - IP do servidor: $VPS_HOST"
    echo "   - Usu√°rio: $VPS_USER"
    echo "   - Senha configurada"
    exit 1
fi

echo "‚úÖ Conex√£o com servidor estabelecida!"

# Backup (apenas se n√£o for primeira instala√ß√£o)
if [ "$UPDATE_MODE" = true ]; then
    echo "üíæ Criando backup da vers√£o atual..."

    BACKUP_DIR="/home/$VPS_USER/backups/landing-$(date +%Y%m%d_%H%M%S)"

    ssh_exec "mkdir -p $BACKUP_DIR"
    ssh_exec "cp -r $VPS_PATH/* $BACKUP_DIR/ 2>/dev/null || true"

    if [ $? -eq 0 ]; then
        echo "‚úÖ Backup criado em: $BACKUP_DIR"
    else
        echo "‚ö†Ô∏è Aviso: Backup n√£o p√¥de ser criado (primeira instala√ß√£o?)"
    fi
fi

# Criar estrutura de diret√≥rios no servidor
echo "üìÅ Preparando estrutura no servidor..."

ssh_exec "mkdir -p $VPS_PATH"
ssh_exec "mkdir -p $VPS_PATH/assets/{css,js,img/icons}"

if [ $? -ne 0 ]; then
    echo "‚ùå Erro ao criar diret√≥rios no servidor"
    exit 1
fi

echo "‚úÖ Estrutura de diret√≥rios criada!"

# Upload dos arquivos
echo "üì§ Enviando arquivos para o servidor..."

# Fazer upload de todos os arquivos
echo "üìÑ Enviando arquivos HTML..."
upload_files "*.html" "$VPS_PATH/"

echo "üé® Enviando assets CSS..."
upload_files "assets/css/" "$VPS_PATH/assets/"

echo "‚ö° Enviando assets JavaScript..."
upload_files "assets/js/" "$VPS_PATH/assets/"

echo "üñºÔ∏è Enviando imagens..."
upload_files "assets/img/" "$VPS_PATH/assets/"

echo "üìã Enviando arquivos de configura√ß√£o..."
for file in robots.txt sitemap.xml manifest.webmanifest; do
    if [ -f "$file" ]; then
        upload_files "$file" "$VPS_PATH/"
    fi
done

if [ $? -ne 0 ]; then
    echo "‚ùå Erro durante upload dos arquivos"
    exit 1
fi

echo "‚úÖ Upload conclu√≠do!"

# Configurar permiss√µes
echo "üîê Configurando permiss√µes..."

ssh_exec "find $VPS_PATH -type f -exec chmod 644 {} \;"
ssh_exec "find $VPS_PATH -type d -exec chmod 755 {} \;"
ssh_exec "chown -R $VPS_USER:$VPS_USER $VPS_PATH"

echo "‚úÖ Permiss√µes configuradas!"

# Otimiza√ß√µes
echo "‚ö° Aplicando otimiza√ß√µes..."

# Comprimir arquivos CSS e JS (se dispon√≠vel)
if ssh_exec "command -v gzip"; then
    echo "üóúÔ∏è Comprimindo arquivos..."
    ssh_exec "find $VPS_PATH -name '*.css' -exec gzip -k {} \;"
    ssh_exec "find $VPS_PATH -name '*.js' -exec gzip -k {} \;"
    ssh_exec "find $VPS_PATH -name '*.html' -exec gzip -k {} \;"
fi

# Configurar cache headers (se arquivo .htaccess n√£o existir)
if ! ssh_exec "[ -f $VPS_PATH/.htaccess ]"; then
    echo "üìÑ Criando arquivo .htaccess..."

    ssh_exec "cat > $VPS_PATH/.htaccess << 'EOF'
# Salv√¥ Landing Page - Configura√ß√µes de Cache e Seguran√ßa

# Cache para arquivos est√°ticos
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType text/css \"access plus 1 month\"
    ExpiresByType application/javascript \"access plus 1 month\"
    ExpiresByType image/png \"access plus 6 months\"
    ExpiresByType image/jpg \"access plus 6 months\"
    ExpiresByType image/jpeg \"access plus 6 months\"
    ExpiresByType image/gif \"access plus 6 months\"
    ExpiresByType image/svg+xml \"access plus 6 months\"
    ExpiresByType image/x-icon \"access plus 1 year\"
    ExpiresByType font/woff \"access plus 1 year\"
    ExpiresByType font/woff2 \"access plus 1 year\"
</IfModule>

# Compress√£o Gzip
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
</IfModule>

# Redirecionamento HTTPS
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# P√°gina de erro personalizada
ErrorDocument 404 /index.html

# Seguran√ßa - Headers
<IfModule mod_headers.c>
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection \"1; mode=block\"
    Header always set Strict-Transport-Security \"max-age=31536000; includeSubDomains\"
</IfModule>
EOF"
fi

echo "‚úÖ Otimiza√ß√µes aplicadas!"

# Verificar deploy
echo "üîç Verificando deploy..."

# Testar se o site est√° acess√≠vel
if ssh_exec "curl -s -o /dev/null -w '%{http_code}' http://localhost" | grep -q "200\|301\|302"; then
    echo "‚úÖ Site acess√≠vel localmente no servidor!"
else
    echo "‚ö†Ô∏è Aviso: Site pode n√£o estar acess√≠vel localmente"
fi

# Verificar arquivos principais
missing_files=()
for file in index.html assets/css/style.css assets/js/app.js; do
    if ! ssh_exec "[ -f $VPS_PATH/$file ]"; then
        missing_files+=("$file")
    fi
done

if [ ${#missing_files[@]} -eq 0 ]; then
    echo "‚úÖ Todos os arquivos principais foram enviados!"
else
    echo "‚ö†Ô∏è Arquivos faltando no servidor:"
    printf '%s\n' "${missing_files[@]}"
fi

# Verificar espa√ßo em disco
disk_usage=$(ssh_exec "df -h $VPS_PATH | tail -1 | awk '{print \$5}' | sed 's/%//'")
if [ "$disk_usage" -gt 90 ]; then
    echo "‚ö†Ô∏è Aviso: Uso de disco alto: ${disk_usage}%"
else
    echo "‚úÖ Espa√ßo em disco: ${disk_usage}% usado"
fi

# Gerar relat√≥rio de deploy
echo ""
echo "üìã Gerando relat√≥rio de deploy..."

cat > deploy-report.txt << EOF
Relat√≥rio de Deploy - Salv√¥ Landing Page
=======================================

Data/Hora: $(date '+%d/%m/%Y %H:%M:%S')
Servidor: $VPS_HOST
Dom√≠nio: $VPS_DOMAIN
Usu√°rio: $VPS_USER
Diret√≥rio: $VPS_PATH

Status do Deploy:
‚úÖ Arquivos enviados com sucesso
‚úÖ Permiss√µes configuradas
‚úÖ Otimiza√ß√µes aplicadas
‚úÖ Configura√ß√µes de cache ativadas

Arquivos Principais:
$(for file in "${required_files[@]}"; do
    if ssh_exec "[ -f $VPS_PATH/$file ]"; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file"
    fi
done)

URLs de Acesso:
üåê Site: https://$VPS_DOMAIN
üìÑ FAQ: https://$VPS_DOMAIN/faq.html
üìß Contato: https://$VPS_DOMAIN/contato.html

Pr√≥ximos Passos:
1. Configurar Firebase (credentials em firebase.js)
2. Configurar reCAPTCHA v3
3. Testar formul√°rios de contato
4. Configurar SSL se necess√°rio
5. Testar responsividade em dispositivos

Para atualizar no futuro:
./2f_landing_deploy.sh --update
EOF

echo "‚úÖ Relat√≥rio salvo em: deploy-report.txt"

# Criar script de atualiza√ß√£o r√°pida
cat > quick-update.sh << 'EOF'
#!/bin/bash

# Script de atualiza√ß√£o r√°pida da Landing Page
# Execute ap√≥s fazer altera√ß√µes nos arquivos

echo "üîÑ Atualiza√ß√£o r√°pida da Landing Page..."

# Verificar se est√° na pasta correta
if [ ! -f "index.html" ]; then
    echo "‚ùå Execute na pasta salvo-landing"
    exit 1
fi

# Executar deploy em modo atualiza√ß√£o
./2f_landing_deploy.sh --update

echo "‚úÖ Atualiza√ß√£o conclu√≠da!"
echo "üåê Acesse: https://salvo.vancouvertec.com.br"
EOF

chmod +x quick-update.sh

# Criar script de rollback
cat > rollback.sh << 'EOF'
#!/bin/bash

# Script de rollback para vers√£o anterior

VPS_HOST="212.85.1.55"
VPS_USER="salvo-vtec"
VPS_PASSWORD="Bj4hwtmpSXA0ELI32nsI"
VPS_PATH="/home/salvo-vtec/htdocs/salvo.vancouvertec.com.br"

echo "üîÑ Fazendo rollback para vers√£o anterior..."

# Listar backups dispon√≠veis
echo "üìã Backups dispon√≠veis:"
sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" "ls -la /home/$VPS_USER/backups/ | grep landing"

echo ""
echo "Para fazer rollback manual:"
echo "1. ssh $VPS_USER@$VPS_HOST"
echo "2. cp -r /home/$VPS_USER/backups/landing-YYYYMMDD_HHMMSS/* $VPS_PATH/"
echo "3. Confirme a restaura√ß√£o"
EOF

chmod +x rollback.sh

# Finaliza√ß√£o
echo ""
echo "üéâ Deploy da Landing Page conclu√≠do com sucesso!"
echo ""
echo "üìä Resumo do Deploy:"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "üåê Site principal: https://$VPS_DOMAIN"
echo "‚ùì FAQ: https://$VPS_DOMAIN/faq.html"
echo "üìß Contato: https://$VPS_DOMAIN/contato.html"
echo "üìÑ Obrigado: https://$VPS_DOMAIN/obrigado.html"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""
echo "üìã Arquivos criados:"
echo "   ‚îú‚îÄ‚îÄ deploy-report.txt     # Relat√≥rio detalhado do deploy"
echo "   ‚îú‚îÄ‚îÄ quick-update.sh       # Atualiza√ß√£o r√°pida"
echo "   ‚îî‚îÄ‚îÄ rollback.sh          # Rollback de emerg√™ncia"
echo ""
echo "üîß Configura√ß√µes pendentes:"
echo "   1. üî• Firebase: Edite assets/js/firebase.js com suas credenciais"
echo "   2. ü§ñ reCAPTCHA: Configure chave no Google Console"
echo "   3. üìß E-mail: Configure servidor SMTP para formul√°rio de contato"
echo "   4. üîí SSL: Verifique se HTTPS est√° funcionando"
echo ""
echo "‚ö° Comandos √∫teis:"
echo "   ./quick-update.sh         # Atualizar arquivos ap√≥s mudan√ßas"
echo "   ./rollback.sh            # Fazer rollback se necess√°rio"
echo "   ./2f_landing_deploy.sh --update  # Deploy completo (modo atualiza√ß√£o)"
echo ""
echo "üì± Para testar:"
echo "   ‚úÖ Responsividade (mobile/desktop)"
echo "   ‚úÖ Formul√°rios PF e PJ"
echo "   ‚úÖ Navega√ß√£o entre p√°ginas"
echo "   ‚úÖ Performance (PageSpeed Insights)"
echo ""
if [ "$UPDATE_MODE" = true ]; then
    echo "üîÑ Atualiza√ß√£o conclu√≠da! Backup da vers√£o anterior criado."
else
    echo "üöÄ Primeira instala√ß√£o conclu√≠da! Site est√° no ar."
fi
echo ""
echo "‚ú® Landing Page do Salv√¥ est√° online e funcionando!"
echo "üåê Acesse agora: https://$VPS_DOMAIN"
